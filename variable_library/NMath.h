#ifndef NMATH
#define NMATH

//////////////////////////////////////

//クラス名:　NMath

//作成者  :　野本　真央

//概要    :　ゲーム内部の時間を参照するクラス

//更新    :
//H28/12/7/ クラス作成
//H28/12/12 進捗ゼロに更新
//H28/12/15 10個の関数が完成　
//			  ※Max,Minに関しては要素数を渡す形式のものであれば完成
//H28/12/22　sin,cos,tan関数完成
//H28/12/26 ATan2関数完成
//H28/12/29 Log関数完成
//H29/1/4　　逆三角関数一時凍結

///////////////////////////////////


namespace variableNS {

	class  NMath {



	private:
		//Max , Min 関数で使うカウント変数
		static int mCount;

		//pow関数使う結果を格納する変数
		static double powResult;

		//fact関数で使う
		static int factResult;

	public:

		///////////////////////////////
		//　π(円周率)を返す
		//　引数　:なし
		//　戻り値:円周率
		///////////////////////////////

		static double Pi();

		///////////////////////////////
		//　切り上げ
		//  引数　:double型の切り上げをしたい変数
		//　戻り値:小数点第一位を切り上げたものを返す
		///////////////////////////////
		static double Round(double x);


		///////////////////////////////
		//　切り下げ
		//  引数　:double型の切り下げをしたい変数
		//　戻り値:小数点第一位を切り上げたものを返す
		///////////////////////////////
		static double Floor(double x);

		///////////////////////////////
		//　最大値を返す
		//  引数　:比較したい二つの変数　、　3つ以上の場合は配列と要素数
		//　戻り値:もらった値の中で一番大きな値を返す
		///////////////////////////////
		static float Max(float x, float y);
		static float Max(float x[], int y);

		///////////////////////////////
		//	最小値を返す
		//  引数　 :比較したい二つの変数　、　3つ以上の場合は配列と要素数
		//　戻り値 :もらった値の中で一番小さい値を返す
		///////////////////////////////
		static float Min(float x, float y);
		static float Min(float x[], int y);

		////////////////////////////////
		//　絶対値を変えす
		//  引数　:絶対値を取りたい変数
		//戻り値　:ｘの絶対値を変えす
		////////////////////////////////
		static double Ads(double x);

		////////////////////////////////
		//　階乗の計算
		//  引数　:階乗の計算をしたい変数
		//戻り値　:ｘの階乗を返す
		////////////////////////////////
		static double Fact(int x);

		////////////////////////////////
		//　平方根の計算
		//  引数　:平方根の計算をしたい変数
		//戻り値　:引数の平方根したものを返す
		////////////////////////////////
		static double Sqrt(double x);

		////////////////////////////////
		//　指定した数値からはみ出た場合　その数値を最小値または最大値に変換する
		//  引数　:
		//戻り値　:変換した値
		////////////////////////////////
		static double Clamp(double x, double min, double max);

		////////////////////////////////
		//　指定した数値からはみ出た場合　その数値を最小値または最大値に変換する
		//  引数　:
		//戻り値　:変換した値
		////////////////////////////////
		static double Repeat(double x, double min, double max);

		////////////////////////////////
		//　a と b の間で t による線形補間します。
		//  引数　:
		//戻り値　:a と b の間で t による保管をした値(float)
		////////////////////////////////
		static double Lerp(float a, float b, float t);

		////////////////////////////////
		//　自然対数の計算
		//  引数　:logの計算がしたい変数
		//戻り値　:xの自然対数の計算した値
		////////////////////////////////
		static double Log(double x);

		////////////////////////////////
		//　累乗
		//  引数　:　基数と指数
		//戻り値　:xのy乗したものを返す
		////////////////////////////////
		static double Pow(double x, int  y);

		////////////////////////////////
		//　度数をラジアン値に変換
		//  引数　:度数
		//戻り値　:ラジアン値
		////////////////////////////////
		static double DegToRad(double x);

		////////////////////////////////
		//　ラジアン値を度数に変換
		//  引数　:ラジアン値
		//戻り値　:度数
		////////////////////////////////
		static double RadToDeg(double x);

		////////////////////////////////
		//　Sin
		//  引数　:sin計算をしたい変数
		//戻り値　:計算結果
		////////////////////////////////
		static double Sin(double rad);

		////////////////////////////////
		//　Cos
		//  引数　:cos計算をしたい変数
		//戻り値　:計算結果
		////////////////////////////////
		static double Cos(double rad);

		////////////////////////////////
		// Tan
		//  引数　:tan計算をしたい変数
		//戻り値　:計算結果
		////////////////////////////////
		static double Tan(double rad);


		////////////////////////////////
		//　ASin
		//  引数　:
		//戻り値　:
		////////////////////////////////
		static double ASin(double x);

		////////////////////////////////
		//　ACos
		//  引数　:
		//戻り値　:
		////////////////////////////////
		static double ACos(double x);

		////////////////////////////////
		// ATan2
		//  引数　:計算したい変数二つ
		//戻り値　:けいさんしたものを-π/2〜π/2の範囲で返す
		////////////////////////////////
		static double ATan2(double a, double b);

	};
}


#endif // !NMATH